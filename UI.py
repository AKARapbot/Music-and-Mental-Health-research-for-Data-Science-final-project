import pandas as pd
import pickle
from sklearn.preprocessing import LabelEncoder
import tkinter as tk
from tkinter import ttk, messagebox
import webbrowser
import pgmpy
import pgmpy.models
import numpy._core
import numpy._core.multiarray

#input model_str in the MHmodel
# Load the model
model_str = ''
model = pickle.loads(bytes.fromhex(model_str))

label_encoder = LabelEncoder()
dummy_data = pd.DataFrame({
    'Fav genre': [
        'Classical', 'Country', 'EDM', 'Folk', 'Hip hop', 'Jazz', 'K pop',
        'Latin', 'Lofi', 'Metal', 'Pop', 'R&B', 'Rap', 'Rock', 'Video game music'
    ]
})
label_encoder.fit(dummy_data['Fav genre'])
fav_genre_encoder = label_encoder

frequency_columns = [
    'Frequency [Classical]', 'Frequency [Country]', 'Frequency [EDM]', 'Frequency [Folk]',
    'Frequency [Hip hop]', 'Frequency [Jazz]', 'Frequency [K pop]', 'Frequency [Latin]',
    'Frequency [Lofi]', 'Frequency [Metal]', 'Frequency [Pop]', 'Frequency [R&B]',
    'Frequency [Rap]', 'Frequency [Rock]', 'Frequency [Video game music]'
]

# GUI
class DepressionTestApp(tk.Tk):
    def __init__(self):
        super().__init__()

        self.title("Depression Test")

        container = tk.Frame(self)
        container.pack(fill="both", expand=True)

        self.frames = {}

        self.user_data = {}

        for F in [AnxietyPage, GenrePage, InstrumentalistPage, ComposerPage] + [self.create_frequency_page(i) for i in range(len(frequency_columns))] + [ResultPage, ResearchConsentPage]:
            page_name = F.__name__
            frame = F(parent=container, controller=self)
            self.frames[page_name] = frame
            frame.grid(row=0, column=0, sticky="nsew")

        self.show_frame("AnxietyPage")

    def show_frame(self, page_name):
        frame = self.frames[page_name]
        frame.tkraise()

    def get_user_data(self):
        return self.user_data

    def create_frequency_page(self, index):
        class FrequencyPage(tk.Frame):
            def __init__(self, parent, controller):
                super().__init__(parent)
                self.controller = controller
                self.index = index
                col = frequency_columns[index]
                tk.Label(self, text=f"How often do you listen to {col.split('[')[1].split(']')[0]} music?").pack(pady=10)
                self.frequency_combobox = ttk.Combobox(self, values=["Never", "Rarely", "Sometimes", "Very frequent"])
                self.frequency_combobox.pack(pady=10)
                next_button = tk.Button(self, text="Next", command=self.next_page)
                next_button.pack(pady=10)

            def next_page(self):
                frequency = self.frequency_combobox.get()
                if frequency in ["Never", "Rarely", "Sometimes", "Very frequent"]:
                    self.controller.user_data[frequency_columns[self.index]] = ["Never", "Rarely", "Sometimes", "Very frequent"].index(frequency)
                    next_index = self.index + 1
                    if next_index < len(frequency_columns):
                        self.controller.show_frame(f"FrequencyPage{next_index}")
                    else:
                        self.controller.show_frame("ResultPage")
                        self.controller.frames["ResultPage"].show_result()
                else:
                    messagebox.showerror("Invalid input", "Please select a valid frequency")

        FrequencyPage.__name__ = f"FrequencyPage{index}"
        return FrequencyPage


class AnxietyPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        tk.Label(self, text="From 0-10, what’s your Anxiety level?").pack(pady=10)
        self.anxiety_entry = tk.Entry(self)
        self.anxiety_entry.pack(pady=10)
        next_button = tk.Button(self, text="Next", command=self.next_page)
        next_button.pack(pady=10)

    def next_page(self):
        anxiety_level = self.anxiety_entry.get()
        if anxiety_level.isdigit() and 0 <= int(anxiety_level) <= 10:
            self.controller.user_data['Anxiety'] = int(anxiety_level)
            self.controller.show_frame("GenrePage")
        else:
            messagebox.showerror("Invalid input", "Please enter a valid anxiety level between 0 and 10")


class GenrePage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        tk.Label(self, text="Please choose your favourite music genre").pack(pady=10)
        self.genre_combobox = ttk.Combobox(self, values=[
            'Classical', 'Country', 'EDM', 'Folk', 'Hip hop', 'Jazz', 'K pop',
            'Latin', 'Lofi', 'Metal', 'Pop', 'R&B', 'Rap', 'Rock', 'Video game music'
        ])
        self.genre_combobox.pack(pady=10)
        next_button = tk.Button(self, text="Next", command=self.next_page)
        next_button.pack(pady=10)

    def next_page(self):
        fav_genre = self.genre_combobox.get()
        if fav_genre in fav_genre_encoder.classes_:
            self.controller.user_data['Fav genre'] = fav_genre_encoder.transform([fav_genre])[0]
            self.controller.show_frame("InstrumentalistPage")
        else:
            messagebox.showerror("Invalid input", "Please choose a valid music genre")


class InstrumentalistPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        tk.Label(self, text="Are you an instrumentalist?").pack(pady=10)
        self.instrumentalist_combobox = ttk.Combobox(self, values=["Yes", "No"])
        self.instrumentalist_combobox.pack(pady=10)
        next_button = tk.Button(self, text="Next", command=self.next_page)
        next_button.pack(pady=10)

    def next_page(self):
        instrumentalist = self.instrumentalist_combobox.get()
        if instrumentalist in ["Yes", "No"]:
            self.controller.user_data['Instrumentalist'] = ["No", "Yes"].index(instrumentalist)
            self.controller.show_frame("ComposerPage")
        else:
            messagebox.showerror("Invalid input", "Please select 'Yes' or 'No'")


class ComposerPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        tk.Label(self, text="Do you compose music sometimes?").pack(pady=10)
        self.composer_combobox = ttk.Combobox(self, values=["Yes", "No"])
        self.composer_combobox.pack(pady=10)
        next_button = tk.Button(self, text="Next", command=self.next_page)
        next_button.pack(pady=10)

    def next_page(self):
        composer = self.composer_combobox.get()
        if composer in ["Yes", "No"]:
            self.controller.user_data['Composer'] = ["No", "Yes"].index(composer)
            self.controller.show_frame("FrequencyPage0")
        else:
            messagebox.showerror("Invalid input", "Please select 'Yes' or 'No'")


class ResultPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        self.result_label = tk.Label(self, text="")
        self.result_label.pack(pady=10)
        self.next_button = tk.Button(self, text="Next", command=self.go_to_research_page)
        self.next_button.pack(pady=10)
        self.result = None

    def show_result(self):
        user_data = self.controller.get_user_data()
        user_input = pd.DataFrame([user_data])
        prediction = model.predict(user_input)
        self.result = prediction['High_Depression'][0]

        if self.result == 1:
            self.result_label.config(text="You may have some tendencies toward depression; please seek professional psychological diagnosis promptly.")
            webbrowser.open("https://www.mind.org.uk/information-support/local-minds/")
        else:
            self.result_label.config(text="Life is beautiful, keep smiling! (●'◡'●)")

    def go_to_research_page(self):
        self.controller.show_frame("ResearchConsentPage")


class ResearchConsentPage(tk.Frame):
    def __init__(self, parent, controller):
        super().__init__(parent)
        self.controller = controller
        tk.Label(self, text="Are you willing to help us conduct further research to improve this program?").pack(pady=10)

        yes_button = tk.Button(self, text="Yes", command=self.agree)
        yes_button.pack(pady=10)

        no_button = tk.Button(self, text="No", command=self.decline)
        no_button.pack(pady=10)

    def agree(self):
        webbrowser.open("https://docs.google.com")
        self.controller.destroy()

    def decline(self):
        self.controller.destroy()


if __name__ == "__main__":
    app = DepressionTestApp()
    app.mainloop()